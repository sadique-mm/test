# Root logger option
log4j.rootLogger=INFO,file

# Error Log
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.Threshold=INFO
log4j.appender.file.MaxFileSize=100KB
log4j.appender.file.MaxBackupIndex=200
log4j.appender.file.File=logs/appliespull.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%p] %c:%L - %m%n



 
# Direct log messages to stdout
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

log4j.appender.stderr = org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Target = System.err
log4j.appender.stderr.layout = org.apache.log4j.PatternLayout
#log4j.appender.stderr.layout.ConversionPattern = %d{ABSOLUTE} %5p %c: %m%n
#log4j.appender.stderr.layout.ConversionPattern = ---\n%p from %c on %d:\n%m%n
log4j.appender.stderr.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

########################### HIBERNATE ###############################

# default hibernate log level - all hibernate loggers will default 
# to this setting unless explicitly overridden below.
# for more verbose logging change 'info' to 'debug', but be prepared 
# for a lot of logspam ;-)
log4j.logger.org.hibernate = error

# logging of general hibernate settings (sometimes useful)
# log4j.logger.org.hibernate.cfg.SettingsFactory = warn
log4j.logger.org.hibernate.cfg.SettingsFactory = info, file
log4j.additivity.org.hibernate.cfg.SettingsFactory=false
log4j.logger.org.hibernate.jdbc.AbstractBatcher=error

# logging of which java class is bound to which DB table
log4j.logger.org.hibernate.cfg.HbmBinder = warn

# logging of which hbm.xml mapping files are being used
log4j.logger.org.hibernate.cfg.Configuration = warn

# HQL query parser activity - 'debug' prints full ASTs for SQL statements
log4j.logger.org.hibernate.hql.ast.AST = warn

# log SQL statements - 'debug' prints executed SQL
# log4j.logger.org.hibernate.SQL = debug
log4j.logger.org.hibernate.SQL = error

# JDBC bind parameters - setting this to 'debug' shows query parameters 
# as well as returned column results & their type (ie: possibly very spammy)
#log4j.logger.org.hibernate.type = trace, SQL
log4j.logger.org.hibernate.type = error
log4j.additivity.org.hibernate.type=false

# schema export/update 
log4j.logger.org.hibernate.tool.hbm2ddl = error

# HQL parse tree debugging. this setting can be pretty spammy.
log4j.logger.org.hibernate.hql = error

# cache activity 
# log4j.logger.org.hibernate.cache = warn
log4j.logger.org.hibernate.cache = info, file
log4j.additivity.org.hibernate.cache=false

# log transaction activity
log4j.logger.org.hibernate.transaction = error

# log JDBC resource acquisition
log4j.logger.org.hibernate.jdbc = error

# log the state of all entities (max 20 entities) associated with 
# the session at flush time (mjh: this doesn't work as advertised?)
# log4j.logger.org.hibernate.pretty = warn

# enable the following line if you want to track down connection 
# leakages when using DriverManagerConnectionProvider 
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider = trace
